{"version":3,"sources":["components/redux/allclubSlice.js","components/redux/userSlice.js","firebase.js","components/scripts/login.js","components/scripts/clubs.js","axios.js","components/redux/clubSlice.js","components/scripts/leftsidebar.js","components/scripts/message.js","components/scripts/clubprofile.js","components/scripts/chatbar.js","components/scripts/onlineuser.js","components/scripts/rightsidebar.js","components/scripts/loggedin.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["allclubSlice","createSlice","name","initialState","allclubs","reducers","setallclubs","state","action","payload","closeallclubs","actions","selectallclubs","allClubs","userSlice","user","login","logout","selectUser","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","className","Button","variant","color","onClick","signInWithPopup","catch","error","alert","message","Clubs","props","fontSize","this","Component","instance","axios","create","baseURL","clubSlice","clubs","setClubs","closeClubs","selectClubs","club","Leftsidebar","dispatch","useDispatch","useSelector","useEffect","post","uid","then","res","data","src","photo","signOut","title","club_Name","prompt","clubName","admin_id","user_uid","user_name","club_name","map","list","nn","clubname","user_id","undefined","clubid","Message","msg_body","msg_from","msg_timestamp","photo_url","ClubProfile","useState","userrr","Chatbar","msg","setMsg","clubp","allClub","setAllClub","get","console","log","allmsg","from_uid","timestamp","cl","onSubmit","e","preventDefault","time","Math","floor","Date","now","read_date","toLocaleString","handleSubmit","type","value","onChange","target","autoComplete","Onlineuser","LoggedIn","App","onAuthStateChanged","authUser","authuser","photoURL","email","displayName","configureStore","reducer","userReducer","clubReducer","allclubReducer","applyMiddleware","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.694feae0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const allclubSlice = createSlice({\r\n  name: 'allclubs',\r\n\r\n  initialState: {\r\n   allclubs: null,\r\n  },\r\n\r\n  reducers: {\r\n    setallclubs: (state,action) => {\r\n      state.allclubs = action.payload;\r\n    },\r\n    closeallclubs:(state)=>{\r\n      state.allclubs = null;\r\n    }\r\n  },\r\n\r\n});\r\n\r\n//actions\r\nexport const { setallclubs,closeallclubs } = allclubSlice.actions;\r\n\r\n//setting states\r\nexport const selectallclubs = state => state.allClubs.allclubs;\r\n\r\n//exporting reducer\r\nexport default allclubSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n\r\n  initialState: {\r\n    user: null,\r\n  },\r\n\r\n  reducers: {\r\n\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state.user = null;\r\n    }\r\n\r\n  },\r\n\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD1yYKNWvh8ECww6olJKoCmszmx_rs-bSQ\",\r\n    authDomain: \"amigoport.firebaseapp.com\",\r\n    projectId: \"amigoport\",\r\n    storageBucket: \"amigoport.appspot.com\",\r\n    messagingSenderId: \"1092895900642\",\r\n    appId: \"1:1092895900642:web:8fb7b480dc7aa468082fbb\",\r\n    measurementId: \"G-09VVTS3284\"\r\n  };\r\n  const firebaseapp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseapp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\n  export { auth, provider};\r\n  export default db;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {auth, provider} from \"../../firebase\"\r\nimport \"../styles/login.css\"\r\n\r\n\r\nfunction login() {\r\n    const signIn = () =>{\r\n        auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"signin\" >\r\n            <Button  className=\"sign_button\" variant=\"contained\" color=\"primary\" onClick={signIn}>\r\n            Sign In\r\n          </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default login\r\n","import React from 'react';\r\nimport \"../styles/clubs.css\";\r\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport { Component } from 'react';\r\n\r\n\r\n\r\nclass Clubs extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name:\"rohith\",\r\n        }\r\n    }\r\n    render(){\r\n    return (\r\n        <div className=\"clubs\">\r\n            <div className=\"club_profile\">\r\n            <AccountCircleRoundedIcon fontSize=\"large\" className=\"club_photo\"/>\r\n                <h3>{this.props.name}</h3>\r\n            </div>\r\n\r\n            <div className=\"club_options\">\r\n            <MoreVertRoundedIcon/>\r\n            </div>\r\n        </div>\r\n     )\r\n    }\r\n}\r\n\r\nexport default Clubs\r\n","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:4000',\r\n  });\r\n\r\nexport default instance;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const clubSlice = createSlice({\r\n  name: 'club',\r\n\r\n  initialState: {\r\n   clubs: null,\r\n  },\r\n\r\n  reducers: {\r\n    setClubs: (state,action) => {\r\n      state.clubs = action.payload;\r\n    },\r\n    closeClubs:(state)=>{\r\n      state.clubs = null;\r\n    }\r\n  },\r\n\r\n});\r\n\r\n//actions\r\nexport const { setClubs,closeClubs } = clubSlice.actions;\r\n\r\n//setting states\r\nexport const selectClubs = state => state.club.clubs;\r\n\r\n//exporting reducer\r\nexport default clubSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport Clubs from \"./clubs\";\r\nimport { auth } from \"../../firebase\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from \"../../axios\";\r\nimport \"../styles/leftsidebar.css\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectUser } from \"../redux/userSlice\";\r\nimport { selectClubs, setClubs, closeClubs } from \"../redux/clubSlice\";\r\nimport {setallclubs,closeallclubs} from \"../redux/allclubSlice\";\r\n\r\nfunction Leftsidebar() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(selectUser);\r\n    var clubs = useSelector(selectClubs);\r\n\r\n\r\n    const handleClub = (nn) => {\r\n        axios.post('/get/present/club',{\r\n            club_name:nn,\r\n            user_id:user.uid,\r\n        }).then((res)=>{\r\n           // console.log(res.data[0][0]);\r\n            if(res.data != undefined) dispatch(setallclubs(res.data));\r\n        })\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        const club_Name = prompt(\"Enter the Club Name\");\r\n        // add new club in db\r\n        axios.post('/new/club',{\r\n            clubName:club_Name,\r\n            admin_id:user.uid\r\n        })\r\n        //add the club in user db\r\n        axios.post('/new/user/club',{\r\n            user_uid:user.uid,\r\n            user_name:user.name,\r\n            club_name:club_Name\r\n        }).then(()=>{\r\n            axios.post('/get/user/clubsList', {\r\n                uid: user.uid\r\n            }).then((res) => {\r\n                dispatch(setClubs(res.data));\r\n                clubs=res.data;\r\n              // console.log(clubs);\r\n            });\r\n        })\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user != null) {\r\n            axios.post('/get/user/clubsList', {\r\n                uid: user.uid\r\n            }).then((res) => {\r\n                dispatch(setClubs(res.data));\r\n            });\r\n        }else{\r\n            dispatch(closeClubs());\r\n            dispatch(closeallclubs());\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"leftsidebar\">\r\n            \r\n            {/* navbar */}\r\n            <div className=\"navbar\">\r\n                <div className=\"homeicon\"><HomeIcon /></div>\r\n                <div className=\"profile\">\r\n                    <img src={user.photo} ></img>\r\n                    <button onClick={() => auth.signOut()} title=\"Logout\"><div className=\"logout\"><PowerSettingsNewIcon /></div></button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* clubs bar */}\r\n            <div className=\"clubsbar\">\r\n                <div className=\"clubsheader\">\r\n                    <div className=\"club_profile_icon\"><GroupIcon /></div>\r\n                    <div className=\"club_name\"><h3>Clubs</h3></div>\r\n                    <div className=\"club_add_icon\"><AddIcon onClick={handleAdd} /></div>\r\n                </div>\r\n                <div className=\"clubss\">\r\n                {(clubs != null) ? (\r\n                    clubs.map((list) => (\r\n                        <div>\r\n                            <button className=\"clubs_button\" onClick={() => handleClub(list.clubname)} key={list.clubid} ><Clubs name={list.clubname} /></button>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                        <div>\r\n                            <button className=\"clubs_button\" ><Clubs name={'No Clubs Present'} /></button>\r\n                        </div>\r\n\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Leftsidebar\r\n","import React, { Component } from 'react'\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport \"../styles/message.css\"\r\n\r\n\r\nexport default class Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            msg_body: \"msg\",\r\n            msg_from: \"rohith\",\r\n            msg_timestamp: \"timestamp\",\r\n            photo_url: \"#\",\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"message\">\r\n                <div className=\"message_profile\">\r\n                {/* <AccountCircleRoundedIcon fontSize=\"large\"/> */}\r\n                <img src={this.props.photo_url}></img>\r\n                <div className=\"msg\">\r\n                {/* <h4>{this.props.msg_from}</h4> */}\r\n                <p>{this.props.msg_body}</p>\r\n                </div>\r\n                   \r\n                </div>\r\n                <div className=\"timestamp\">\r\n                {this.props.msg_timestamp}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState } from 'react';\r\nimport \"../styles/clubprofile.css\";\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport axios from \"../../axios\";\r\nimport { useSelector } from 'react-redux';\r\nimport {selectUser} from \"../redux/userSlice\";\r\n\r\n\r\nexport default function ClubProfile(props){\r\n    const [club_name, setclub_name] = useState('club');\r\n    const userrr = useSelector(selectUser);\r\n\r\n   const  handleAdd = () => {\r\n        alert(props.club_name);\r\n        axios.post('/new/user/club',{\r\n            club_name: props.club_name,\r\n            user_name: userrr.uid,\r\n        })\r\n    }\r\n\r\n        return (\r\n            <div className=\"club_info\">\r\n                <GroupWorkIcon fontSize=\"large\" className=\"club_photo\"/>\r\n                  <div className=\"club_info_action\"><h2>{props.club_name}</h2></div>\r\n                <div>\r\n                    <button onClick={handleAdd} className=\"addc_icon_button\">\r\n                        <PlaylistAddIcon className=\"addc_icon\" />\r\n                        </button>\r\n                        <ThumbUpAltIcon className=\"follow_icon\"/>\r\n                        <FavoriteIcon className=\"fav_icon\"/>\r\n                </div>\r\n            \r\n            </div>\r\n        )\r\n}\r\n\r\n","import { React, useState, useEffect } from \"react\";\r\n\r\nimport \"../styles/chatbar.css\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport AccountCircleRoundedIcon from \"@material-ui/icons/AccountCircleRounded\";\r\nimport MoreVertRoundedIcon from \"@material-ui/icons/MoreVertRounded\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport InsertDriveFileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Message from \"./message\";\r\nimport { selectallclubs, setallclubs } from \"../redux/allclubSlice\";\r\nimport { selectUser } from \"../redux/userSlice\";\r\nimport axios from \"../../axios\";\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport ClubProfile from \"./clubprofile\";\r\n\r\nfunction Chatbar() {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const user = useSelector(selectUser);\r\n  const clubp = useSelector(selectallclubs);\r\n  const [allClub, setAllClub] = useState([])\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    var time = Math.floor(Date.now() / 1000);\r\n    const milliseconds = time * 1000;\r\n    const date = new Date(milliseconds);\r\n    const read_date = date.toLocaleString();\r\n\r\n    axios\r\n      .post(\"/new/message\", {\r\n        clubName: clubp[0].club_name,\r\n        from_uid: user.uid,\r\n        timestamp: read_date,\r\n        msg: msg,\r\n        photo: user.photo,\r\n      })\r\n      .then(() => {\r\n        if (clubp != null) {\r\n          axios\r\n            .post(\"/get/present/club\", {\r\n              club_name: clubp[0].club_name,\r\n              user_id: user.uid,\r\n            })\r\n            .then((res) => {\r\n              // console.log(res.data[0][0]);\r\n              if (res.data != undefined) {\r\n                dispatch(setallclubs(res.data));\r\n                console.log(res.data);\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get('/get/clubsList').then((res)=>{\r\n      //console.log(res.data);\r\n      setAllClub(res.data);\r\n      console.log(allClub);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"chatbar\">\r\n      {clubp != null ? (\r\n        <div className=\"chat_header\">\r\n          <div className=\"chat_header_profile\">\r\n            <AccountCircleRoundedIcon fontSize=\"large\" />\r\n            <h3>{clubp[0].club_name}</h3>\r\n          </div>\r\n          <div className=\"chat_options\">\r\n            <MoreVertRoundedIcon />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chat_header\">\r\n        <div className=\"chat_header_profile\">\r\n          <GroupWorkIcon fontSize=\"large\" />\r\n          <h3>Channels In The Server</h3>\r\n        </div>\r\n        <div className=\"chat_options\">\r\n          <MoreVertRoundedIcon />\r\n        </div>\r\n      </div>\r\n      )}\r\n\r\n      <div className=\"message_box\">\r\n        {clubp != null ? (\r\n          clubp[1].map((allmsg) => (\r\n            <Message\r\n              msg_body={allmsg.msg}\r\n              photo_url={allmsg.photo}\r\n              msg_from={allmsg.from_uid}\r\n              msg_timestamp={allmsg.timestamp}\r\n            />\r\n          ))\r\n        ) : (\r\n         \r\n          ((allClub != null)?(\r\n             allClub.map((cl)=>(\r\n               <ClubProfile club_name={cl.clubName}/>\r\n             ))\r\n          ):(\r\n            <ClubProfile/>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n     {(clubp!=null)?(\r\n      <div className=\"chat_message\">\r\n        <div className=\"send\">\r\n          <div className=\"emoji\">\r\n            <EmojiEmotionsIcon fontSize=\"large\" />\r\n          </div>\r\n          <form\r\n            onSubmit={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              name=\"value\"\r\n              value={msg}\r\n              onChange={(e) => setMsg(e.target.value)}\r\n              autoComplete=\"off\"\r\n            />\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"insert\">\r\n          <div className=\"file\">\r\n            <InsertDriveFileIcon fontSize=\"large\" />\r\n          </div>\r\n          <div className=\"photo\">\r\n            <ImageIcon fontSize=\"large\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n     ):(\r\n    //   <div className=\"chat_message\">\r\n      \r\n    // </div>\r\n    <div></div>\r\n     )}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbar;\r\n","import React, { Component } from 'react';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport \"../styles/onlineuser.css\"\r\n\r\nexport default class Onlineuser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            name:'rohit',\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"onlineuser\">\r\n               <FiberManualRecordIcon fontSize=\"small\"/>\r\n               <h5>{this.props.name}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"../styles/rightsidebar.css\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport Onlineuser from \"./onlineuser.js\";\r\n\r\nfunction Leftsidebar() {\r\n    var dd=\"dd\";\r\n    return (\r\n        <div className=\"rightsidebar\">\r\n            <div className=\"rightsidebar_header\">\r\n                <SignalCellularAltIcon fontSize=\"large\"/>\r\n                <h4>Online Users</h4>\r\n            </div>\r\n\r\n            <div className=\"online\">\r\n                <Onlineuser name={\"rrr\"}/>\r\n                <Onlineuser name={\"rohith\"}/>\r\n                <Onlineuser name={\"supriya\"}/>\r\n                <Onlineuser name={\"venkat\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leftsidebar\r\n","import React, { Component } from 'react'\r\nimport \"../styles/loggedin.css\"\r\n\r\nimport Leftsidebar from \"./leftsidebar\";\r\nimport Chatbar from \"./chatbar\";\r\nimport Rightsidebar from \"./rightsidebar\";\r\n\r\nexport default class LoggedIn extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loggedin\">\r\n            <Leftsidebar/>\r\n            <Chatbar/>\r\n            <Rightsidebar/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { React, useEffect } from \"react\";\r\nimport { closeallclubs } from \"./components/redux/allclubSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login, selectUser, logout } from \"./components/redux/userSlice\";\r\nimport { auth } from \"./firebase\";\r\nimport Login from \"./components/scripts/login\";\r\nimport LoggedIn from \"./components/scripts/loggedin\";\r\nimport axios from \"./axios\";\r\nimport \"./App.css\";\r\nimport { closeClubs } from \"./components/redux/clubSlice\";\r\n\r\n\r\nfunction App() {\r\n  \r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n\r\n  const addusertodb = (authuser) => {\r\n    axios.post(\"/new/user\", {\r\n      user_id: authuser.uid,\r\n      user_name: authuser.displayName,\r\n      email: authuser.email,\r\n      photo: authuser.photo,\r\n    });\r\n  };\r\n\r\n  // useEffect function\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // console.log(authUser);\r\n        dispatch(\r\n          login({\r\n            uid: authUser.uid,\r\n            photo: authUser.photoURL,\r\n            email: authUser.email,\r\n            name: authUser.displayName,\r\n          })\r\n        );\r\n        addusertodb(authUser);\r\n      } else {\r\n        dispatch(logout());\r\n        dispatch(closeallclubs());\r\n        dispatch(closeClubs());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user != null ? (\r\n        <div>\r\n          <LoggedIn className=\"loggedIn\" />\r\n        </div>\r\n      ) : (\r\n          <div className=\"background\" ><Login /></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore,applyMiddleware } from '@reduxjs/toolkit';\r\nimport userReducer from '../components/redux/userSlice';\r\nimport clubReducer from '../components/redux/clubSlice';\r\nimport allclubReducer from \"../components/redux/allclubSlice\"\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    club: clubReducer,\r\n    allClubs: allclubReducer,\r\n  },\r\n  applyMiddleware\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}